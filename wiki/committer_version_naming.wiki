#summary Nutz 的版本命名规范
=Top=
<p align="center"><font size=6>* Nutz 的版本命名规范 *</font></p>
----
<p align="right"> <font color="#AAA" size="1"> * By * </font>    *zozoh* (<font color="#080"> zozohtnt@gmail.com </font>)  *wendal* (<font color="#080"> wendal1985@gmail.com </font>) <font color="#AAA" size="1"> * <br/>Verify By * </font>    *Xiaofeng.Fu* (<font color="#080"> hilliate@gmail.com </font>)</p>

<p align="right">[#Top]</p>
=`Nutz 每个版本 jar 包的命名遵照如下格式`=
{{{
nutz[.模块名]-主版本号.质量级别.[发布序号].jar
}}}

      # <b>模块名 </b>: 可选，如不声明，则表示包括所有功能
      # <b>主版本号 </b>: 从 1 开始顺序递增，除非程序结构或者接口发生重大改动，否则保持不变
      # <b>质量级别 </b>:<b>a </b>表示 alpha 品质，<b>b </b>表示 beta 品质，<b>r </b>表示 release 品质
          * <b>a </b><font color="#008800"><u>alpha </u></font>: 表示这个版本，接口仍然不稳定，每次发布仍然有可能做微小的调整
          * <b>b </b><font color="#008800"><u>beta </u></font>: 表示这个版本，接口已经稳定，主版号一致的 Beta 版会一直向前兼容，直至遇到一个 alpha 版
          * <b>r </b><font color="#008800"><u>release </u></font>: 表示这个版本是一个非常稳定的版本。
      # <b>发布序号 </b>: 从 1 开始顺序递增
这就意味着，如果是如下的一系列版本

<font color="#008800"><b>1.b.30 </b></font>` ->  `<font color="#AA0000"><b>1.a.31 </b></font>` ->  `<font color="#008800"><b>1.b.32 </b></font>` ->  `<font color="#008800"><b>1.b.33 </b></font>` ->  `<font color="#008800"><b>1.b.34 </b></font>

      * 1.b.32 可能不会兼容 1.b.30
      * 1.b.34, 可以兼容 1.b.33 和 1.b.32

<p align="right">[#Top]</p>
=`你还需要知道`=
如果你看到 nutz-1.a.20.jar 和 nutz.1.b.18.jar

      * 1.a.20 比较新，因为它的发布序号更新
      * 1.b.18 更稳定，它可以兼容之前所有的 beta 版本
      * 1.b.19 之后的 beta 版本，将兼容到 1.b.18 （不包括），因为期间的 alpha 版将兼容序列破坏了
每月快照版的命名规则

{{{
    nutz-主版本号.质量级别.[发布序号]-snapshot-r[SVN仓库版本]-[日期]-[编译等级].jar
}}}

    # [发布序号 主版本号.质量级别. ]仅代表可能的下一版本的信息.
    # <b>SVN仓库版本 </b>: 对应的SVN仓库特定的版本
    # <b>日期 </b>: 编译日期
    # <b>编译等级 </b>: jdk1.5 或者 jdk1.6
每月快照版的发布规则

    # 每月1/15前后发布,必须通过全部测试用例
    # 发布格式为zip文件,含jdk1.5和jdk1.6的jar及source
    # 发布文件的命名方法: nutz-主版本号.质量级别.[发布序号 发布序号 ]-snapshot-r[SVN仓库版本 SVN仓库版本 ]-[日期 日期 ].zip
对于每月快照版的提示

    # 不应使用于生产环境
    # 任何快照版之间,任何标准版与快照版之间,不做任何兼容性方面的保证
