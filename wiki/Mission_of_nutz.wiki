#summary Nutz 框架的概要介绍
#labels Phase-Requirements

= 提高程序员的生产力是 Nutz 框架的唯一使命 =

Java 是一门优美的编程语言，10多年的发展，到了现在，它几乎已经被应用到了任何地方，在高端的企业服务器上，手持设备的芯片里，车载设备，智能家电甚至火星车上。 在功能上，它广泛的涉足到了软件应用的各个领域，现在，它开始向桌面和图像处理方面频频发力。 从历史上看它是一门成熟的语言，从现在来看，它是世界上最广泛使用的语言，从将来看，它是最有前途的语言，（现在它依然充满了活力和创新）

但是，在越来越流行的 Web 开发领域， Java 似乎逐渐露出了疲态。是的，脚本语言们卷起了一场热潮，似乎已经快可以用“革命”两个字来形容了。而Java，被“脚本小子们”诟病最多的便是*开发效率的低下*。

但是，真的是这样的吗？

从本质上来说， Java 语言本身为程序员提供的帮助只有两点，一个是语言的语法，二一个就是内置的类库。 现在从事 Web 开发的，大多是采用第三方的类库（或者说是框架），比如流行的 SSH。 我想说的是，所谓 Java 在流行的 Web 开发的低效，不如是说第三方类库在开发的时候的低效比较贴切一些。

为了证明这一点，我写作了 Nutz， 它是一组轻便小型的框架的集合。 各个部分可以被独立使用。 而 Nutz 的使命就是在力所能及的情况下，最大限度的提高Web开发人员的生产力。

是的，提高生产力是这个框架唯一的目标和使命。 就像 Java 设计之初，考虑最多的是程序员的易用性和运行时效率的权衡， Nutz 也是这样。我希望通过 Nutz， Java 的开发人员可以获得更快的开发速度，更少的代码量。并且这些是以不损害运行时效率为前提的。

= Nutz 的原则性目标 =

为最大限度的提高程序员的生产力，Nutz 必须具备如下特性：

  # 不依赖任何第三方 Jar 包，从而便于程序员建立开发环境，部署，甚至重新编译 Nutz 的源代码。
  # 可以很好的和各种主流框架和类库等协同工作
  # 提供一条更低的且平滑的学习曲线

同时， Nutz 也必须为程序员提供编程的辅助支持：
 
  # 丰富完善的文档
  # 必要的辅助工具
    * 代码生成器
    * Eclipse 插件
  # 在线支持