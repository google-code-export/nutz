#summary 如何编译&运行测试 (for Eclipse)
<p align="center"><font size=6>* 如何编译&运行测试 (for Eclipse) *</font></p>
----
<p align="right"> <font color="#AAA" size="1"> * By * </font>    *zozoh* (<font color="#080"> zozohtnt@gmail.com </font>)</p>
<wiki:toc max_depth="1"/>
----
=`搭建 Eclipse 编译环境`=
==`1. 准备目录`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/01.png  

==`2. 使用 SVN 工具`==
        * Windows 用户： 这里用的是  [http://tortoisesvn.net 龟版 SVN ]
        * Linux 用户： 你肯定用不到我废话了 
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/02.png  

连接 http://nutz.googlecode.com/svn  

==`3. SVN 的 http 连接比较慢，需要等待几十秒至1分钟。连接上后，选择 trunk 目录，并 checkout`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/03.png  

==`4. 选择 Checkout 的目标地址，点确定`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/04.png  

这个例子，我们的目标地址就是 D:\nutz\svn\trunk  

==`5. 点击  OK 后，会开始下载 Nutz 全部的文件`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/05.png  

Nutz 全部的文件并不大，如果是正常的 ADSL， 大概半分钟左后就能全部下完：  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/05_2.png  

下载之后，你的目录结构应该是：  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/05_3.png  

  

==`6. 准备依赖的 jar 包`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/06.png  

Nutz 不是号称不依赖其他 jar 吗？ 是的，我暂时在修改字节码方面依赖了 javassist。没有用 ASM 是因为时间比较赶。 好在 javassist 工作的也不错。  

Nutz.Dao 的测试时在 Mysql/Psql/Oracle/SqlServer2000/SqlServer2005 这几个个数据库上作的，所以我需要它们的 JDBC 实现。 你可以根据需要选择一个你喜欢的数据库。我最喜欢 PSQL，但是当然，大多数人都爱用 Mysql。  

Apache 提供的连接池是两个 jar，有了它，我们就可以很简单的创建 DataSource，你可以选择你喜欢的连接池实现。c3p0，proxool ， 爱用什么都可以，但是得把 jar 包准备好。  

除了， javassist，其他的 jar 其实都不会影响 Nutz 的编译，但是要是运行测试用例，你还得需要 Apache 的连接池，以及某一个 数据库的 JDBC 实现。  

我们，先把 jar 文件在 D:/nutz/deps 里面放好，后面会用得到  

==`7. 打开 Eclipse, 工作区路径为 D:/nutz/workspace`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/07.png  

==`8. 打开之后的工作区是空空如也`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/08.png  

当然，你要在你已经存在的工作区里进行下面的操作也可以。  

==`9. 增加 Tomcat 服务器 (你必选先装了 Tomcat)`==
这里主要是为了编译，而需要 tomcat 带的 Servlet 相关的类选择  *`Window > Preferences > Server > Runtime Environment > Add `* 在弹出的对话框选择  *`Apache > Apache Tomcat v6.0 `* （ _因为我装的就是 Tomcat6.0 _） 点击 next ，填写 Tomcat 的安装路径  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/09.png  

然后点击 finish ， OK 之类的，确认所有的对话框  

==`10. 选择 File > New，在弹出的对话框中选择 建立普通的 Java 项目（Java Project），并点 Next`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/10.png  

        * 输入项目名称为： nutz@google   (其实，随便你起个什么名字) 
        * 直接点击 Finish。 
        * 如果Eclipse 弹出对话框问你要不要转到 Java透视图，随你便，都行 
==`11. 新建立的项目包括一个默认的 src 文件夹，以及默认的 JRE System Library，选中 src，按 delete 键删除，我们不需要它`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/11.png  

==`12. 项目目录清净了，那么让我们把 Nutz SVN 目录下的文件链接进来：`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/12.png  

`右击项目名称，选择 New > Folder  `

==`13. 在弹出的对话框中，选择链接外部文件`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/13.png  

==`14. 点击 Finish 按钮后，项目下多出了一个链接文件夹`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/14.png  

以此类推，将 test 目录也加进来，如果你愿意，你可以把所有的目录都加进来  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/14_2.png  

<font color="#FF0000">*这里需要注明的是 *</font>，doc 目录下的文本文件时 UTF-8 编码的，所有你最好将 doc 目录的属性（右击选属性 properties） 里面的 Text file encoding 改成 UTF-8，如果我猜的不错，你默认的会是 GBK。这样，你可以用 Eclipse 的文本编辑器查看文档  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/14_3.png  

同时，也要 <font color="#FF0000">*把 test 目录 和 src 目录设置成 UTF-8 *</font> 编码格式，因为我的注释用的是中文。  

==`15. 下面配置项目的 build path`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/15.png  

==`16. 在弹出的 Configure Build Path 对话框中，将 src 和 test 加为 source folder`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/16.png  

注意，请别忘了设置过滤的 pattern:  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/16_2.png  

否则，会出编译警告，因为 svn 缓存在目录中的文件也会被 Eclipse 看到。分别为 src 和 test 增加过滤 pattern，就可以让 Eclipse 忽略所有的 .svn 工作目录  

过滤的表达式是：   <font color="#0000AA">*` **/.svn/**  `*</font>  

==`17. 最后，检查一下，设置完毕后，是不是这个样子，注意下图红圈部分：`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/17.png  

==`18. 最后，让我们设置依赖关系包`==
增加依赖的 Jar 包  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/18.png  

确认之后，再点击 Add Library ... ，在弹出的对话框里选 Server Runtime，之后，选前面加入的 Apache Tomcat 6.0  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/18_2.png  

`为了运行单元测试，你还需要加入 JUnit 4 的依赖包: Add Library... > JUnit > JUnit 4 > OK  `

设置完毕后，所有的依赖关系应该是这个样子  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/18_3.png  

==`19. 至此，你的项目全部都建立起来了，并且在 Eclipse 应该都会被自动编译通过`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/19.png  

----
=`如何运行 JUnit 测试`=
==`1. 那么如何运行 JUnit 测试呢，我需要 A, 一个数据库， B，一个 properties 文件`==
首先你需要建立一个测试数据库，比如，我们叫 zzhtest.  

{{{
mysql:> create database zzhtest;
}}}

  

==`2. 然后，在 Eclipse 项目里，增加一个新的 source folder ：右击项目 > New > Source Folder`==
        # 随便给这个 Folder 起个名字，比如  *properties *
        # 将这个目录设置成为 Source Folder 
        # 然后在里面创建一个文本文件  *nutz-test.properties *
这个文件的正文为：  

{{{
driver=com.mysql.jdbc.Driver
url=jdbc:mysql://127.0.0.1:3306/zzhtest
username=root
password=123456
}}}

 一共四行。当然，不用我说，大家一定知道怎么修改吧,建立好文件的项目结构为：  

http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/21.png  

我之所以这样做而不直接把 nutz-test.properties 文件放到 src 或者 test 下面，是因为，这个文件通常在不同的机器上时不 一样的，我家，公司，以及笔记本上的 nutz-properties 都不一样。所以，不宜将这个文件放到 svn 上。  

==`3. 之后，打开 test/org/nutz/TestAll.java ，然后用 JUnit 运行`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/22.png  

==`4. 如果上述操作没出什么岔子，那么你会看到正确的运行结果：`==
http://www.dtresearch.cn/web/_temp/1026/wiki_imgs/23.png  

----
=`最后 ...`=
      * Nutz 是开源项目，你可以修改源代码，并运行JUnit 测试，来验证你的修改会不会导致错误 
      * 你还可以增加 JUnit 测试，来看看 Nutz 的代码品质到底如何 
      * 当然，如果你写的 JUnit 测出了 Nutz  的 bug，或者修正了Nutz代码的缺陷， 请发信到这个地址  nutzam@googlegroups.com  ,并附上你的代码。 
      * 我们会非常感谢你的付出。如果你提出的修改超过 5 次（包含）被接受，你会收到一封邀请信，邀请你成为 Nutz 的 Commiter 
      * 关于如何成为 Nutz 的 Commiter，请  [for_committer 参看这里 ]
还有：  

      * 在 build 目录下，有 build.xml， 你可以用 Ant 编译 
      * 如果你建立一个基于 Nutz 的项目，将 Nutz 的 jar 包以及 Javassist 的jar包 加入到项目的build path 即可 
