#summary 如何在插入之前或之后为字段设值
=Top=
<p align="center"><font size=6>* 如何在插入之前或之后为字段设值 *</font></p>
----
<p align="right"> <font color="#AAA" size="1"> * By * </font>    *zozoh* (<font color="#080"> zozohtnt@gmail.com </font>)</p>
<wiki:toc max_depth="2"/>
----

<p align="right">[#Top]</p>
=`插入之前 - @Prev`=
在插入之前，你想通过一段 SQL 为你的 POJO 某一个字段设值。你可以通过 @Prev 属性  

{{{
@Table("t_pet")
public class Pet{
	@Column("photo")
	@Prev( @SQL("SELECT txt FROM t_pet_photo WHERE id=@name") )
	private String photoPath;
...
}}}

@Prev 注解接受一组 @SQL 作为参数，它支持如下特性：  

      * @SQL 声明了一条 SQL 语句，支持动态占位符。 
          * 变量:  <font color="#999999">_形式如： $XXX _</font> ，由 org.nutz.dao.TableName 来设置，以支持 [dao_dynamic_table_name 动态表名 ]
              * 特殊占位符: $view: 表示当前实体对象的视图名称 
              * 特殊占位符: $field: 表示注解所在字段数据库名称 
          * 参数:  <font color="#999999">_形式如：@XXX _</font>， 直接参考对象自身的属性值 
              * 比如上例，将会参考对象自身的 name  字段的值 
      * @SQL 更详细的语法规范请参看  [dao_customized_sql 自定义 SQL ]
----

<p align="right">[#Top]</p>
=`插入之后 - @Next`=
在插入之后，你想通过一段 SQL 为你的 POJO 某一个字段设值。你可以通过 @Next 属性  

{{{
@Table("t_pet")
public class Pet{
	@Column
	@Id
	@Next( @SQL("SELECT currval('t_pet_id_seq')") )
	private int id;
...
}}}

如上例，执行插入后，你的 Pet 对象的 id 会被数据库中新的值更新。  

@Next 的规则和 @Prev 是一样的  

----

<p align="right">[#Top]</p>
=`数据库方言`=
无论是 @Prev 还是 @Next，你都是通过 @SQL 声明的数据库方言。但是，假设你并不确定你的 POJO 将会工作在哪一个数据 库上，比如你的项目有两个数据源，一个是 Oracle 一个是 Postgresql，那么你的 POJO 该如何写方言呢？  

{{{
@Table("t_pet")
public class Pet{
	@Column
	@Id
	@Next({
		@SQL(db = DB.PSQL,   "SELECT currval('t_pet_id_seq')"),
		@SQL(db = DB.ORACLE, "SELECT t_pet_id_seq.currval FROM dual')"),
		@SQL(db = DB.OTHER,  "SELECT MAX(id) FROM t_pet")
	})
	private int id;
...
}}}

现在 Nutz.Dao 支持这些数据库:  

{{{
public enum DB {
	H2, DB2, PSQL, ORACLE, SQLSERVER, MYSQL, OTHER
}
}}}

