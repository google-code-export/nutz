#title: Nutz version naming rules
#author:Peter.Tung(mastung@gmail.com)

Nutz's jar files follow the listed naming rules
{{{
nutz[.Module Name]-Main Version.Build Level.[Publish Version].jar
}}}
# {*Module Name} : Optional, if not statement, it means that it includes all features.
# {*Main Version} : Increased from 1, It will be change only in case the huge code changes.
# {*Build Level} : {*a} alpha level, {*b} beta level, {*r} release level
	 * {*a} {#080;_alpha}: Interfaces are not stable, they may be changed when the new version release. It could be used by {#00A;*Develop Environment}.
	 * {*b} {#080;_beta}: Interfaces are stable, they are compatible with the following release. It can be used by {#00A;*Develop Environment}.
	 * {*r} {#080;_release}: Interfaces are stable. It can be used by {#00A;*Business Environment}.
# {*Publish Version} : Increased from 1. It will be reset as 1 while the Main Version or Build Level is changed. 

{*Examples:}

Full feature Jar file
{{{
nutz-1.a.3.jar
This jar file includes all features of Nutz, with version 1 framework structure, alpha build level, the 3rd time publish build.
}}}

Only Dao feature Jar file
{{{
nutz.dao-1.a.6.jar
This jar file includes only Dao features of Nutz, with version 1 framework structure, alpha build level, the 6th time publish build.
}}}

