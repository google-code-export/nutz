#index:0,1

概述
	由于大部分数据表会将主键设计成自增长的序列，对于多数的数据库插入操作，往往下一步操作是要获得新生成记录主键
	的键值。因此，大多数的持久化框架都会支持用这样或者那样的形式，让调用者很方便的做到这一点，Nutz.Dao 也不例外

	不仅如此，Nutz.Dao 主键生成策略还考虑了如下几点
	# 不同的数据库生成主键序列不一样
	# 调用者的程序可能跑在不同的数据库上 
	# 调用者有时希望自己指定主键的值，而不是由数据库自动生成

	针对这些假设， Nutz.Dao 通过注解 @Id 很好的完成了如下的功能
-----------------------------------------------------------------------------------------------------------------
自动生成的主键
	默认获取主键
	使用数据库的方言获取主键
		postgresql
-----------------------------------------------------------------------------------------------------------------
手动生成的主键
-----------------------------------------------------------------------------------------------------------------
一次配置多个数据库
	这个需求在生产环境上没有意义，但是在开发环境上或许有需要。起码对于 Nutz 来说，它的自动测试就需要跑在不同
	的数据库上。